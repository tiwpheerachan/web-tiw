import streamlit as st
import requests
import time
import hashlib
import hmac
import urllib.parse
import json

# ===== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏≠‡∏õ Shopee =====
PARTNER_ID = 1280109
# ‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà Partner Key ‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
PARTNER_KEY = "5a4e6e4c4d4375464c57506b7a42775a77466d686c534255574267514f494a54"  # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ key ‡∏à‡∏£‡∏¥‡∏á
REDIRECT_URL = "https://web-tiw-f6am2usgmpzwel2adoj5qg.streamlit.app/"

# ===== Function ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå login Shopee =====
def generate_login_url():
    timestamp = int(time.time())
    path = "/api/v2/shop/auth_partner"
    base_url = f"https://partner.test-stable.shopeemobile.com{path}"

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á sign ‡∏î‡πâ‡∏ß‡∏¢ partner_id + path + timestamp
    sign_base = f"{PARTNER_ID}{path}{timestamp}"
    sign = hmac.new(PARTNER_KEY.encode(), sign_base.encode(), hashlib.sha256).hexdigest()

    redirect_encoded = urllib.parse.quote(REDIRECT_URL, safe="")
    login_url = (
        f"{base_url}?partner_id={PARTNER_ID}"
        f"&timestamp={timestamp}"
        f"&sign={sign}"
        f"&redirect={redirect_encoded}"
    )
    return login_url

# ===== Function ‡∏î‡∏∂‡∏á Access Token =====
def get_access_token(code, shop_id):
    url = "https://partner.test-stable.shopeemobile.com/api/v2/auth/token/get"
    timestamp = int(time.time())
    path = "/api/v2/auth/token/get"
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á signature: partner_id + path + timestamp
    sign_base = f"{PARTNER_ID}{path}{timestamp}"
    sign = hmac.new(PARTNER_KEY.encode(), sign_base.encode(), hashlib.sha256).hexdigest()

    headers = {"Content-Type": "application/json"}
    params = {
        "partner_id": PARTNER_ID,
        "timestamp": timestamp,
        "sign": sign
    }
    
    # Request body
    json_data = {
        "code": code,
        "shop_id": int(shop_id),
        "partner_id": PARTNER_ID
    }

    # Debug information
    st.write("üîç **Debug Token Request:**")
    st.write(f"- URL: {url}")
    st.write(f"- Sign Base: `{sign_base}`")
    st.write(f"- Sign: `{sign}`")
    st.write(f"- Body: `{json.dumps(json_data)}`")
    st.write(f"- Timestamp: {timestamp}")

    return requests.post(url, headers=headers, params=params, json=json_data)

# ===== Function ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ =====
def get_shop_info(access_token, shop_id):
    url = "https://partner.test-stable.shopeemobile.com/api/v2/shop/get_shop_info"
    timestamp = int(time.time())
    path = "/api/v2/shop/get_shop_info"
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á signature: partner_id + path + timestamp + access_token + shop_id
    sign_base = f"{PARTNER_ID}{path}{timestamp}{access_token}{shop_id}"
    sign = hmac.new(PARTNER_KEY.encode(), sign_base.encode(), hashlib.sha256).hexdigest()

    params = {
        "partner_id": PARTNER_ID,
        "timestamp": timestamp,
        "access_token": access_token,
        "shop_id": shop_id,
        "sign": sign
    }

    return requests.get(url, params=params)

# ====== ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ======
st.set_page_config(page_title="Shopee OAuth & Shop Data", page_icon="üõí")
st.title("üõí Shopee OAuth & Shop Management")

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
st.sidebar.header("‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤")
st.sidebar.write(f"**Partner ID:** {PARTNER_ID}")
st.sidebar.write(f"**Shop ID:** 142837")
st.sidebar.write(f"**Redirect URL:** {REDIRECT_URL}")

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏™‡πà Partner Key ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
if PARTNER_KEY == "YOUR_ACTUAL_PARTNER_KEY_HERE":
    st.error("‚ö†Ô∏è **‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà Partner Key ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î!**")
    st.write("‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà 10 ‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î ‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà `YOUR_ACTUAL_PARTNER_KEY_HERE` ‡∏î‡πâ‡∏ß‡∏¢ Partner Key ‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å Shopee Console")
    st.stop()

# ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ query parameters
query_params = st.query_params

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö parameters ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
st.write("üîç **All Query Parameters:**")
for key, value in query_params.items():
    st.write(f"- {key}: {value}")

# ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ parameters ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ
code = query_params.get("code")
shop_id = query_params.get("shop_id") 
query_token = query_params.get("query_token")
cookie_token = query_params.get("cookie_token")

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ parameters
if query_token is not None or cookie_token is not None:
    st.warning("‚ö†Ô∏è ‡∏û‡∏ö query_token ‡∏´‡∏£‡∏∑‡∏≠ cookie_token - ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô error ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£ redirect")
    
    if query_token == "" and cookie_token == "":
        st.info("üí° **‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:** ‡∏•‡∏≠‡∏á‡∏Ñ‡∏•‡∏¥‡∏Å 'Confirm Authorization' ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Shopee ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")

if code and shop_id:
    st.success(f"‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö authorization code ‡πÅ‡∏•‡∏∞ shop_id: `{shop_id}`")
    
    if st.button("üîÑ ‡∏î‡∏∂‡∏á Access Token"):
        with st.spinner("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á Access Token..."):
            try:
                res = get_access_token(code, shop_id)
                
                st.write("üìã **Response Status:**", res.status_code)
                
                if res.status_code == 200:
                    token_data = res.json()
                    
                    if "access_token" in token_data:
                        access_token = token_data["access_token"]
                        refresh_token = token_data.get("refresh_token", "")
                        
                        st.success("üéâ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Access Token ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                        
                        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Token
                        with st.expander("üìã Token Information"):
                            st.json(token_data)
                        
                        # ‡πÄ‡∏Å‡πá‡∏ö token ‡πÉ‡∏ô session state
                        st.session_state.access_token = access_token
                        st.session_state.shop_id = shop_id
                        st.session_state.refresh_token = refresh_token
                        
                    else:
                        st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö access_token ‡πÉ‡∏ô response")
                        st.json(token_data)
                else:
                    st.error(f"‚ùå HTTP Error {res.status_code}")
                    try:
                        error_data = res.json()
                        st.json(error_data)
                        
                        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                        if "error_sign" in str(error_data):
                            st.info("üí° **‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:** ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Partner Key ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
                    except:
                        st.text(res.text)
                        
            except Exception as e:
                st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

elif code and not shop_id:
    st.warning("‚ö†Ô∏è ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö code ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ shop_id")
    st.write(f"Code: {code}")
    
elif not code and shop_id:
    st.warning("‚ö†Ô∏è ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö shop_id ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ code")
    st.write(f"Shop ID: {shop_id}")

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ñ‡πâ‡∏≤‡∏°‡∏µ access token
if hasattr(st.session_state, 'access_token') and st.session_state.access_token:
    st.divider()
    st.subheader("üè™ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤")
    
    if st.button("üìä ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤", use_container_width=True):
        with st.spinner("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤..."):
            try:
                shop_res = get_shop_info(st.session_state.access_token, st.session_state.shop_id)
                
                if shop_res.status_code == 200:
                    shop_data = shop_res.json()
                    
                    if "error" not in shop_data:
                        st.success("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                        st.json(shop_data)
                    else:
                        st.error(f"‚ùå API Error: {shop_data}")
                else:
                    st.error(f"‚ùå HTTP Error {shop_res.status_code}")
                    st.text(shop_res.text)
                    
            except Exception as e:
                st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

else:
    st.info("üëá ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£ Login ‡∏Å‡∏±‡∏ö Shopee")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Test Account
    with st.expander("üß™ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Test Account"):
        st.write("**Shop ID:** 142837")
        st.write("**Shop Account:** SANDBOX.f216878ec16b03a6f962")
        st.write("**Shop Password:** 1bdd53e0ec3b7fb2")
        st.write("**Shop Login URL:** https://seller.test-stable.shopee.co.th")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    with st.expander("üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"):
        st.write("""
        1. ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠ Login Shopee" ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
        2. ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Test Account ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠ Login
        3. ‡∏Ñ‡∏•‡∏¥‡∏Å "Confirm Authorization" ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Shopee
        4. ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö redirect ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ
        5. ‡∏Ñ‡∏•‡∏¥‡∏Å "‡∏î‡∏∂‡∏á Access Token" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠ token
        """)
    
    login_url = generate_login_url()
    
    st.markdown(f"""
    <div style="text-align: center; margin: 20px 0;">
        <a href="{login_url}" target="_self" style="
            background-color: #ee4d2d;
            color: white;
            padding: 12px 24px;
            text-decoration: none;
            border-radius: 8px;
            font-weight: bold;
            display: inline-block;
        ">üü¢ ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠ Login Shopee</a>
    </div>
    """, unsafe_allow_html=True)

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Debug
with st.expander("üîß Debug Information"):
    st.write("**Current Query Parameters:**")
    st.json(dict(query_params))
    
    st.write("**Configuration:**")
    st.write(f"- Partner ID: {PARTNER_ID}")
    st.write(f"- Partner Key: {'*' * 20}...{PARTNER_KEY[-4:] if len(PARTNER_KEY) > 4 else 'NOT_SET'}")
    st.write(f"- Redirect URL: {REDIRECT_URL}")
    
    if hasattr(st.session_state, 'access_token'):
        st.write("**Session State:**")
        st.write(f"- Access Token: {st.session_state.access_token[:20]}...")
        st.write(f"- Shop ID: {st.session_state.shop_id}")

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
st.info("""
üí° **‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:** ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤ Authorization ‡∏Ç‡∏≠‡∏á Shopee ‡πÅ‡∏•‡πâ‡∏ß! 

**‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:**
1. ‡πÉ‡∏™‡πà Partner Key ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î (‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà 10)
2. ‡∏Ñ‡∏•‡∏¥‡∏Å "Confirm Authorization" ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Shopee
3. ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö redirect ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
4. ‡∏Ñ‡∏•‡∏¥‡∏Å "‡∏î‡∏∂‡∏á Access Token"

**‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ error:** ‡∏•‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Partner Key ‡πÅ‡∏•‡∏∞ Redirect URL ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
""")
