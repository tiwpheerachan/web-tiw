import streamlit as st
import requests
import time
import hashlib
import hmac
import urllib.parse
import json

# ===== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏≠‡∏õ Shopee =====
PARTNER_ID = 1280109
PARTNER_KEY = "5a4e6e4c4d4375464c57506b7a42775a77466d686c534255574267514f494a54"
REDIRECT_URL = "https://web-tiw-f6am2usgmpzwel2adoj5qg.streamlit.app/"

# ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö IP =====
def get_current_ip():
    try:
        response = requests.get("https://api.ipify.org?format=json", timeout=5)
        return response.json()["ip"]
    except:
        return None

# ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Signature (‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢) =====
def create_simple_signature(partner_id, path, timestamp, body=""):
    if body:
        body_str = json.dumps(body, separators=(',', ':'), sort_keys=True)
        sign_base = f"{partner_id}{path}{timestamp}{body_str}"
    else:
        sign_base = f"{partner_id}{path}{timestamp}"
    
    partner_key_bytes = bytes.fromhex(PARTNER_KEY)
    signature = hmac.new(partner_key_bytes, sign_base.encode('utf-8'), hashlib.sha256).hexdigest()
    return signature

# ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö API =====
def test_api_connection():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ token"""
    try:
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ public endpoint
        response = requests.get("https://partner.test-stable.shopeemobile.com", timeout=10)
        return response.status_code == 200
    except:
        return False

# ===== Streamlit App =====
st.set_page_config(page_title="Shopee Fix Final", page_icon="üîß")
st.title("üîß Shopee OAuth - Final Solution")

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
st.error("""
üö® **‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö:** IP Address ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô Shopee Console

**IP ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö:** `34.83.176.217`

**‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥:** ‡πÄ‡∏û‡∏¥‡πà‡∏° IP ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô Shopee Console ‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∂‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
""")

# ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
st.subheader("üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î")

with st.expander("üîß ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏Ç‡πâ‡∏≤ Shopee Console", expanded=True):
    st.markdown("""
    1. **‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà** ‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
    2. **‡πÑ‡∏õ‡∏ó‡∏µ‡πà:** https://open.shopee.com
    3. **Login** ‡∏î‡πâ‡∏ß‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏≠‡∏õ
    4. **‡∏Ñ‡∏•‡∏¥‡∏Å "App Management"** ‡∏´‡∏£‡∏∑‡∏≠ **"‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏≠‡∏õ"**
    """)
    
    if st.button("üåê ‡πÄ‡∏õ‡∏¥‡∏î Shopee Console", use_container_width=True):
        st.markdown('[üîó ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î Shopee Console](https://open.shopee.com)')

with st.expander("üîß ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏´‡∏≤‡πÅ‡∏≠‡∏õ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"):
    st.markdown("""
    1. ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ App Management ‡πÉ‡∏´‡πâ‡∏´‡∏≤ **"test tiw"**
    2. **‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ**‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏õ‡∏ô‡∏±‡πâ‡∏ô
    3. ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏õ
    """)

with st.expander("üîß ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç IP Whitelist", expanded=True):
    current_ip = get_current_ip()
    
    st.markdown(f"""
    **‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏≠‡∏õ ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ:**
    
    1. **‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á‡∏´‡∏≤** "IP Address Whitelist" ‡∏´‡∏£‡∏∑‡∏≠ "Whitelist"
    2. **‡∏•‡∏ö IP ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:**
       - `104.16.0.1`
       - `104.16.3.2`
       - `104.16.8.8`
    3. **‡πÄ‡∏û‡∏¥‡πà‡∏° IP ‡πÉ‡∏´‡∏°‡πà:** `{current_ip or '34.83.176.217'}`
    4. **‡∏Ñ‡∏•‡∏¥‡∏Å Save** ‡∏´‡∏£‡∏∑‡∏≠ **‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å**
    5. **‡∏£‡∏≠ 2-3 ‡∏ô‡∏≤‡∏ó‡∏µ** ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    """)
    
    st.code(f"IP ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°: {current_ip or '34.83.176.217'}")

with st.expander("üîß ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö"):
    st.markdown("""
    1. **‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ**
    2. **Refresh ‡∏´‡∏ô‡πâ‡∏≤** (‡∏Å‡∏î F5)
    3. **‡∏Ñ‡∏•‡∏¥‡∏Å "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠"** ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
    4. **‡∏´‡∏≤‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à** ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
    """)

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö
st.divider()
st.subheader("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠")

col1, col2, col3 = st.columns(3)

with col1:
    if st.button("üåê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Network", use_container_width=True):
        if test_api_connection():
            st.success("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Shopee API ‡πÑ‡∏î‡πâ")
        else:
            st.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Shopee API")

with col2:
    if st.button("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö IP", use_container_width=True):
        ip = get_current_ip()
        if ip:
            st.success(f"‚úÖ IP ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {ip}")
        else:
            st.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö IP")

with col3:
    if st.button("üîÑ Refresh ‡∏´‡∏ô‡πâ‡∏≤", use_container_width=True):
        st.rerun()

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö OAuth (‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç IP)
query_params = st.query_params
code = query_params.get("code")
shop_id = query_params.get("shop_id", "142837")

if code and shop_id:
    st.divider()
    st.success(f"‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö authorization code ‡πÅ‡∏•‡∏∞ shop_id: `{shop_id}`")
    
    if st.button("üîë ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á Access Token", type="primary", use_container_width=True):
        with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö..."):
            timestamp = int(time.time())
            path = "/api/v2/auth/token/get"
            
            body = {
                "code": code,
                "shop_id": int(shop_id),
                "partner_id": PARTNER_ID
            }
            
            signature = create_simple_signature(PARTNER_ID, path, timestamp, body)
            
            params = {
                "partner_id": PARTNER_ID,
                "timestamp": timestamp,
                "sign": signature
            }
            
            try:
                response = requests.post(
                    f"https://partner.test-stable.shopeemobile.com{path}",
                    params=params,
                    json=body,
                    headers={"Content-Type": "application/json"},
                    timeout=10
                )
                
                st.write(f"**Response Status:** {response.status_code}")
                
                if response.status_code == 200:
                    token_data = response.json()
                    if "access_token" in token_data:
                        st.success("üéâ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Access Token ‡πÅ‡∏•‡πâ‡∏ß!")
                        st.json(token_data)
                        
                        # ‡πÄ‡∏Å‡πá‡∏ö token
                        st.session_state.access_token = token_data["access_token"]
                        st.session_state.shop_id = shop_id
                        
                        st.balloons()
                    else:
                        st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö access_token")
                        st.json(token_data)
                elif response.status_code == 403:
                    st.error("‚ùå ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÑ‡∏î‡πâ HTTP 403 - IP Address ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô Console")
                    st.json(response.json())
                else:
                    st.error(f"‚ùå HTTP Error {response.status_code}")
                    st.text(response.text)
                    
            except Exception as e:
                st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

else:
    # ‡∏™‡πà‡∏ß‡∏ô OAuth Login
    st.divider()
    st.info("üëÜ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç IP Whitelist ‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á")
    
    timestamp = int(time.time())
    path = "/api/v2/shop/auth_partner"
    signature = create_simple_signature(PARTNER_ID, path, timestamp)
    
    redirect_encoded = urllib.parse.quote(REDIRECT_URL, safe='')
    login_url = (
        f"https://partner.test-stable.shopeemobile.com{path}?partner_id={PARTNER_ID}"
        f"&timestamp={timestamp}"
        f"&sign={signature}"
        f"&redirect={redirect_encoded}"
    )
    
    st.markdown(f"""
    <div style="text-align: center; margin: 20px 0;">
        <a href="{login_url}" target="_self" style="
            background: #ee4d2d;
            color: white;
            padding: 12px 24px;
            text-decoration: none;
            border-radius: 8px;
            font-weight: bold;
            display: inline-block;
        ">üöÄ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Shopee OAuth</a>
    </div>
    """, unsafe_allow_html=True)

# ‡∏´‡∏≤‡∏Å‡∏°‡∏µ Access Token ‡πÅ‡∏•‡πâ‡∏ß
if "access_token" in st.session_state:
    st.divider()
    st.success("üéâ ‡∏°‡∏µ Access Token ‡πÅ‡∏•‡πâ‡∏ß!")
    
    if st.button("üìä ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤", use_container_width=True):
        timestamp = int(time.time())
        path = "/api/v2/shop/get_shop_info"
        
        sign_base = f"{PARTNER_ID}{path}{timestamp}{st.session_state.access_token}{st.session_state.shop_id}"
        signature = hmac.new(
            bytes.fromhex(PARTNER_KEY), 
            sign_base.encode('utf-8'), 
            hashlib.sha256
        ).hexdigest()
        
        params = {
            "partner_id": PARTNER_ID,
            "timestamp": timestamp,
            "access_token": st.session_state.access_token,
            "shop_id": st.session_state.shop_id,
            "sign": signature
        }
        
        try:
            response = requests.get(
                f"https://partner.test-stable.shopeemobile.com{path}",
                params=params
            )
            
            if response.status_code == 200:
                st.success("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                st.json(response.json())
            else:
                st.error(f"‚ùå HTTP Error {response.status_code}")
                st.text(response.text)
                
        except Exception as e:
            st.error(f"‚ùå Error: {e}")

# ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
st.divider()
st.info("""
## üí° ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏•:

1. **‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á** ‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° IP `34.83.176.217` ‡πÉ‡∏ô Shopee Console ‡πÅ‡∏•‡πâ‡∏ß
2. **‡∏£‡∏≠ 5-10 ‡∏ô‡∏≤‡∏ó‡∏µ** ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö Shopee ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
3. **‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ `0.0.0.0/0`** ‡πÉ‡∏ô IP Whitelist (‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏∏‡∏Å IP) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
4. **‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Partner Key** ‡πÉ‡∏ô Shopee Console ‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î
5. **‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Shopee Support** ‡∏´‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏•

**Test Account:**
- Shop Account: SANDBOX.f216878ec16b03a6f962
- Shop Password: 1bdd53e0ec3b7fb2
""")
